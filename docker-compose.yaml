version: "3.8"

services:
  products_service_mysql:
    build:
      context: ./database/mysql
      dockerfile: Dockerfile
    image: products_service_mysql:v1
    container_name: products_service_mysql_container
    env_file:
      - ./database/mysql/.env
    ports:
      - "3307:3306"  # Host port 3307 maps to container port 3306
    volumes:
      - products_service_mysql_data:/var/lib/mysql
    networks:
      shared_network:
        ipv4_address: 192.168.0.110  # products_service_mysql IP

  products_service_php:
    build:
      context: ./web/php
      dockerfile: Dockerfile
    image: products_service_php:v1
    container_name: products_service_php_container
    working_dir: /var/www/html/x2microservices-products-service
    env_file:
      - ./web/php/.env
    restart: always
    ports:
      - "9001:9000"  # Host port 9001 maps to container port 9000
    volumes:
      - ./web/php:/var/www/html/x2microservices-products-service
      - ./web/php/vendor:/var/www/html/x2microservices-products-service/vendor
    depends_on:
      - products_service_mysql
    networks:
      shared_network:
        ipv4_address: 192.168.0.111  # products_service_php IP

  products_service_nginx:
    build:
      context: ./web/nginx
      dockerfile: Dockerfile
    image: products_service_nginx:v1
    container_name: products_service_nginx_container
    working_dir: /etc/nginx
    env_file:
      - ./web/nginx/.env
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - ./web/nginx:/etc/nginx
    depends_on:
      - products_service_php
    networks:
      shared_network:
        ipv4_address: 192.168.0.112  # products_service_nginx IP

volumes:
  products_service_mysql_data:

networks:
  shared_network:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.0.0/24"
          gateway: "192.168.0.1"
    external: true
